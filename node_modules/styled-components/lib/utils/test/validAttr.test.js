'use strict';

var _expect = require('expect');

var _expect2 = _interopRequireDefault(_expect);

var _validAttr = require('../validAttr');

var _validAttr2 = _interopRequireDefault(_validAttr);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('validAttr', function () {
  it('should allow all the reactProps', function () {
    (0, _expect2.default)((0, _validAttr2.default)('children')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('dangerouslySetInnerHTML')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('key')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('ref')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('autoFocus')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('defaultValue')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('valueLink')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('defaultChecked')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('checkedLink')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('innerHTML')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('suppressContentEditableWarning')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onFocusIn')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onFocusOut')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('className')).toEqual(true);
  });
  it('should allow all the html props', function () {
    (0, _expect2.default)((0, _validAttr2.default)('accept')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('acceptCharset')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('accessKey')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('action')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('allowFullScreen')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('allowTransparency')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('alt')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('async')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('autoComplete')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('autoPlay')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('capture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('cellPadding')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('cellSpacing')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('charSet')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('challenge')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('checked')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('cite')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('classID')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('className')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('cols')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('colSpan')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('content')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('contentEditable')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('contextMenu')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('controls')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('coords')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('crossOrigin')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('data')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('dateTime')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('default')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('defer')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('dir')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('disabled')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('download')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('draggable')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('encType')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('form')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('formAction')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('formEncType')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('formMethod')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('formNoValidate')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('formTarget')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('frameBorder')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('headers')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('height')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('hidden')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('high')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('href')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('hrefLang')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('htmlFor')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('httpEquiv')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('icon')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('id')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('inputMode')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('integrity')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('is')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('keyParams')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('keyType')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('kind')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('label')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('lang')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('list')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('loop')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('low')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('manifest')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('marginHeight')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('marginWidth')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('max')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('maxLength')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('media')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('mediaGroup')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('method')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('min')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('minLength')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('multiple')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('muted')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('name')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('nonce')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('noValidate')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('open')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('optimum')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('pattern')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('placeholder')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('poster')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('preload')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('profile')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('radioGroup')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('readOnly')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('referrerPolicy')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('rel')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('required')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('reversed')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('role')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('rows')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('rowSpan')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('sandbox')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('scope')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('scoped')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('scrolling')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('seamless')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('selected')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('shape')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('size')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('sizes')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('span')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('spellCheck')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('src')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('srcDoc')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('srcLang')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('srcSet')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('start')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('step')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('style')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('summary')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('tabIndex')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('target')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('title')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('type')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('useMap')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('value')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('width')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('wmode')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('wrap')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('about')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('datatype')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('inlist')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('prefix')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('property')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('resource')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('typeof')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('vocab')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('autoCapitalize')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('autoCorrect')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('autoSave')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('color')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('itemProp')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('itemScope')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('itemType')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('itemID')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('itemRef')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('results')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('security')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('unselectable')).toEqual(true);
  });
  it('should handle all the SVG props', function () {
    (0, _expect2.default)((0, _validAttr2.default)('accentHeight')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('accumulate')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('additive')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('alignmentBaseline')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('allowReorder')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('alphabetic')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('amplitude')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('arabicForm')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('ascent')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('attributeName')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('attributeType')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('autoReverse')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('azimuth')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('baseFrequency')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('baseProfile')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('baselineShift')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('bbox')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('begin')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('bias')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('by')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('calcMode')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('capHeight')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('clip')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('clipPath')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('clipRule')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('clipPathUnits')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('colorInterpolation')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('colorInterpolationFilters')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('colorProfile')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('colorRendering')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('contentScriptType')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('contentStyleType')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('cursor')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('cx')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('cy')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('d')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('decelerate')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('descent')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('diffuseConstant')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('direction')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('display')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('divisor')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('dominantBaseline')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('dur')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('dx')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('dy')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('edgeMode')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('elevation')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('enableBackground')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('end')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('exponent')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('externalResourcesRequired')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fill')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fillOpacity')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fillRule')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('filter')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('filterRes')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('filterUnits')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('floodColor')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('floodOpacity')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('focusable')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fontFamily')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fontSize')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fontSizeAdjust')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fontStretch')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fontStyle')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fontVariant')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fontWeight')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('format')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('from')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fx')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('fy')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('g1')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('g2')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('glyphName')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('glyphOrientationHorizontal')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('glyphOrientationVertical')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('glyphRef')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('gradientTransform')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('gradientUnits')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('hanging')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('horizAdvX')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('horizOriginX')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('ideographic')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('imageRendering')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('in')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('in2')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('intercept')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('k')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('k1')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('k2')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('k3')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('k4')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('kernelMatrix')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('kernelUnitLength')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('kerning')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('keyPoints')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('keySplines')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('keyTimes')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('lengthAdjust')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('letterSpacing')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('lightingColor')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('limitingConeAngle')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('local')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('markerEnd')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('markerMid')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('markerStart')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('markerHeight')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('markerUnits')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('markerWidth')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('mask')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('maskContentUnits')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('maskUnits')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('mathematical')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('mode')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('numOctaves')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('offset')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('opacity')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('operator')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('order')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('orient')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('orientation')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('origin')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('overflow')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('overlinePosition')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('overlineThickness')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('paintOrder')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('panose1')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('pathLength')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('patternContentUnits')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('patternTransform')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('patternUnits')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('pointerEvents')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('points')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('pointsAtX')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('pointsAtY')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('pointsAtZ')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('preserveAlpha')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('preserveAspectRatio')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('primitiveUnits')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('r')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('radius')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('refX')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('refY')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('renderingIntent')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('repeatCount')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('repeatDur')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('requiredExtensions')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('requiredFeatures')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('restart')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('result')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('rotate')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('rx')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('ry')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('scale')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('seed')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('shapeRendering')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('slope')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('spacing')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('specularConstant')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('specularExponent')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('speed')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('spreadMethod')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('startOffset')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('stdDeviation')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('stemh')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('stemv')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('stitchTiles')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('stopColor')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('stopOpacity')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('strikethroughPosition')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('strikethroughThickness')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('string')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('stroke')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('strokeDasharray')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('strokeDashoffset')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('strokeLinecap')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('strokeLinejoin')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('strokeMiterlimit')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('strokeOpacity')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('strokeWidth')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('surfaceScale')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('systemLanguage')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('tableValues')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('targetX')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('targetY')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('textAnchor')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('textDecoration')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('textRendering')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('textLength')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('to')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('transform')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('u1')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('u2')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('underlinePosition')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('underlineThickness')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('unicode')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('unicodeBidi')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('unicodeRange')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('unitsPerEm')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('vAlphabetic')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('vHanging')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('vIdeographic')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('vMathematical')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('values')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('vectorEffect')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('version')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('vertAdvY')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('vertOriginX')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('vertOriginY')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('viewBox')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('viewTarget')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('visibility')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('widths')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('wordSpacing')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('writingMode')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('x')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xHeight')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('x1')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('x2')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xChannelSelector')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xlinkActuate')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xlinkArcrole')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xlinkHref')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xlinkRole')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xlinkShow')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xlinkTitle')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xlinkType')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xmlBase')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xmlns')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xmlnsXlink')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xmlLang')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('xmlSpace')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('y')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('y1')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('y2')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('yChannelSelector')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('z')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('zoomAndPan')).toEqual(true);
  });
  it('should handle aria and data attributes', function () {
    (0, _expect2.default)((0, _validAttr2.default)('data-xyz')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('data-omg-this-works')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('aria-label')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('aria-labelled-by')).toEqual(true);
  });
  it('should handle uppercase aria and data attributes', function () {
    (0, _expect2.default)((0, _validAttr2.default)('DATA-XYZ')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('DATA-OMG-THIS-WORKS')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('ARIA-LABEL')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('ARIA-LABELLED-BY')).toEqual(true);
  });
  it('should allow all the event handlers', function () {
    (0, _expect2.default)((0, _validAttr2.default)('onCopy')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCopyCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCut')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCutCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onPaste')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onPasteCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCompositionEnd')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCompositionEndCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCompositionStart')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCompositionStartCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCompositionUpdate')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCompositionUpdateCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onKeyDown')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onKeyDownCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onKeyPress')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onKeyPressCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onKeyUp')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onKeyUpCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onFocus')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onFocusCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onBlur')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onBlurCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onChange')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onChangeCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onInput')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onInputCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSubmit')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSubmitCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onClick')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onClickCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onContextMenu')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onContextMenuCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDoubleClick')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDoubleClickCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDrag')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragEnd')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragEndCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragEnter')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragEnterCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragExit')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragExitCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragLeave')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragLeaveCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragOver')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragOverCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragStart')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDragStartCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDrop')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDropCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseDown')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseDownCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseEnter')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseEnterCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseLeave')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseLeaveCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseMove')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseMoveCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseOut')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseOutCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseOver')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseOverCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseUp')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onMouseUpCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSelect')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSelectCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTouchCancel')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTouchCancelCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTouchEnd')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTouchEndCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTouchMove')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTouchMoveCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTouchStart')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTouchStartCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onScroll')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onScrollCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onWheel')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onWheelCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onAbort')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onAbortCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCanPlay')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCanPlayCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCanPlayThrough')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onCanPlayThroughCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDurationChange')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onDurationChangeCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onEmptied')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onEmptiedCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onEncrypted')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onEncryptedCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onEnded')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onEndedCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onError')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onErrorCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onLoadedData')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onLoadedDataCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onLoadedMetadata')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onLoadedMetadataCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onLoadStart')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onLoadStartCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onPause')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onPauseCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onPlay')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onPlayCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onPlaying')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onPlayingCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onProgress')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onProgressCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onRateChange')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onRateChangeCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSeeked')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSeekedCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSeeking')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSeekingCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onStalled')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onStalledCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSuspend')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onSuspendCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTimeUpdate')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTimeUpdateCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onVolumeChange')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onVolumeChangeCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onWaiting')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onWaitingCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onLoad')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onLoadCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onAnimationStart')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onAnimationStartCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onAnimationEnd')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onAnimationEndCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onAnimationIteration')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onAnimationIterationCapture')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTransitionEnd')).toEqual(true);
    (0, _expect2.default)((0, _validAttr2.default)('onTransitionEndCapture')).toEqual(true);
  });
});